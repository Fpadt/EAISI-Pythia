---
title   : EAISI - Pythia
subtitle: EVALUATION
author  : "F.J. Padt"
date    : "`r format(Sys.time(), '%B %d, %Y')`"
output  :
  pdf_document:
    df_print: paged
    toc: yes
    toc_depth: 1      
editor_options:
  chunk_output_type: console
  markdown: 
    wrap: 80  
---

\newpage

![](../images/logo.png)

# Setup

```{r}
#| label: 'setup'
#| eval:   true

# public functions ---------------------------------------------------------
invisible(source("C:/RW/EAISI-Pythia/library/General.R"))

library("padt")
library(ggrepel)

# location for generated figures
pimg <- file.path('.', 'fig')

MAN <-  FALSE
VAR <- 'EPA'
MAT <- pa_matn1_input('10023')
# MAT <- pa_matn1_input('433')

colP <- pa_color_get("primary")
colS <- pa_color_get("secondary")
colT <- pa_color_get("tertiary")
colA <- pa_color_get("accent1")

colScale <- c(colP, colS, colT, colA)

# pa_ET_COLS <- list(
#   "CG" = "#0f5e3c",
#   "FG" = "#089b35",
#   "LG" = "#38e56d",
#   "YL" = "#fff200",
#   "WT" = "#FFFFFF",
#   "JB" = "#333333",
#   "BL" = "#000000"
# )
```

# Sales versus Forecast

## Time series

```{r}
#| label: 'display sales'
#| eval: True

ACT <- 
  DYN[MATERIAL == MAT
      & STEP %between% c(-1, 1)
      # & VTYPE == '010' & FTYPE  == '1'   
      & CALMONTH %between% c('202401', '202412') 
      ] 

n_cols <- length(unique(paste(ACT$VTYPE, ACT$FTYPE)))
ET_COL <- pa_ET_COLS[1:n_cols]

ggplot(
  ACT, 
  aes(
    x      = CALMONTH, 
    y      = Q,
    color  = paste(VTYPE, FTYPE),
    group  = paste(VTYPE, FTYPE)
  )) +
  geom_line(
    linewidth = 2
    # colour   = "white"
    # position = "dodge"
  ) +
  labs(
    x     = "Month",
    y     = "Quantity EA", 
    title = paste("Sales of SKU:", pa_matn1_output(MAT), "per month"),
    color = "Legend"
  ) +
  scale_color_manual(
    labels = c("Act.1", "Fct.1", "Act.2", "Fct.2"),
    values = colScale
  ) +
  geom_label(aes(label = round(Q/1000, 1))) +
  guides(color = guide_legend(
    override.aes = 
      list(
        fill  = colScale,  
        color = colScale 
      )
  )
  ) +
  theme(axis.text.x = element_text(angle = 90, hjust = 1))
```

## Violin on Horizon

```{r}
#| label: 'violin plot of Forecast Accuracy'
#| eval: true

# ACC_BCK <-  copy(ACC)
# ACC     <- copy(dtACC7)
dtACC0 <- dtACC[MODEL == "ETS"]

dtACC0 <- 
  copy(dtACC7)                                                       %>%
  pa_model_accuracy(
  .act_ftype = 1, .fct_ftype = 2
  )                                                                  %>%
  .[CALMONTH >= '202401']                                            %>%
  .[!is.na(STEP) &  STEP <= 18]

dtACC0[, .(
  EPA  = mean(EPA, na.rm = TRUE),
  APA  = mean(APA, na.rm = TRUE),
  MAE  = mean(AE , na.rm = TRUE),
  RMSE = mean(E2 , na.rm = TRUE) %>% sqrt()   
  ), 
  by = .(STEP)]

dtALPHA <-  
  copy(dtACC7) %>%
  .[, .(SQ = sum(Q)), 
    by = .(SALESORG, PLANT, MATERIAL)] %>%
  .[, .(SALESORG, PLANT, MATERIAL, 
        ALPHA = round(sqrt(SQ/max(SQ)), 2))] 

dtACC0 <- 
  dtALPHA[dtACC0, on =.(SALESORG, PLANT, MATERIAL)]

# Violin plot: STEP on x-axis (treat as discrete), ACC on y-axis
ggplot(dtACC0, aes(x = factor(STEP), y = AE)) +
  # Violin layer to show the distribution
  geom_violin(
    trim           = TRUE, 
    draw_quantiles = c(0.25, 0.5, 0.75),
    color          = "#089b35"
    ) +
  geom_jitter(
    aes(
      # size  = WGHT,
      # alpha = 0.3 #ALPHA
    ),
    height = 0, 
    width  = 0.25, 
    color  = "#38e56d"
    # ,
    , size   = 0.8
    , alpha  = 0.3
    ) +
  # RSME
  stat_summary(
    mapping = aes(x = factor(STEP), y = E2),
    fun   = function(x) {sqrt(mean(x))}, 
    geom  = "point", 
    shape = 23,   # diamond shape
    size  = 3, 
    fill  = "#0f5e3c",
    color = "#0f5e3c"
  ) +
  # MAE
  stat_summary(
    mapping = aes(x = factor(STEP), y = AE),
    fun   = function(x) {mean(x)}, 
    geom  = "point", 
    shape = 22,   # diamond shape
    size  = 3, 
    fill  = "#333333",
    color = "#333333"
    
  ) +
  labs(
    x     = "Step",
    y     = "Absolute Error",
    title = glue(
      "{SORG}: Distribution of Absolute Forecast Error's by Step"),
    subtitle = glue(
      "Articles (Class-A): {length(unique(dtACC0$MATERIAL))},  data points: {nrow(dtACC0)}"),
    caption = paste(
      "extreme RMSE at Step 8 is caused by forecast errors",
      "made in May 2023", sep = "\n")
  ) +
  coord_cartesian(ylim = c(0, 25000))

```

```{r}

ggplot(
  dtACC0[STEP == 1 & AE < 15000], aes(y = AE)) +
  geom_density(
    )
fivenum(dtACC0[STEP == 1 & AE < 15000, AE])
```

```{r}
#| label:  'SC-113B for M-1, M-2, M-3'
#| eval:   true

tst <- DYN[MATERIAL == MAT & 
             ((VTYPE == '010' & FTYPE == 1 & STEP == -1) | (VTYPE == '060' & FTYPE == 2))]

ACC <- pa_model_accuracy(
  .tab = tst, 
  .act_ftype = 1, .fct_ftype = 2
  )

DT <- ACC[get(VAR) >0,.(STEP, ACC = get(VAR))]

dtFA_melt  <- 
  copy(ACC[STEP <4 & MATERIAL == MAT])       %>%
  melt.data.table(
    measure.vars  = c("APA", "EPA"),
    variable.name = "PE_TYPE",
    value.name    = "PE"
    )  %>%
  .[, STEP:= paste0("M-", STEP)] %T>% 
  setorder(CALMONTH)


ggplot(
  data = dtFA_melt[
    CALMONTH >= '202401' & 
      MATERIAL == MAT &  
      PE_TYPE  == VAR
  ], 
  aes(
    x     = CALMONTH, 
    y     = PE, 
    group = factor(STEP), 
    color = factor(STEP)
  )
) +
  geom_line(linewidth = 2) +
  geom_point() +
  # Instead of geom_label(), use geom_label_repel()
  geom_label_repel(aes(label = round(PE, 1)),
                   # optional parameters to tweak repel behavior
                   force         = 2,
                   max.overlaps  = Inf,
                   box.padding   = 0.3,
                   point.padding = 0.3
  ) +
  pa_brand_color_scale(labels = c("M-1", "M-2", "M-3"))+ 
  labs(
    x     = "Year Month",
    y     = "Accuracy Academic",
    title = glue("SC-113B {pa_matn1_output(`MAT`)} - Forecast Accuracy ({`VAR`}) M-1, M-2, M-3"),
    color = "Forecast Period"
  ) +
  guides(color = guide_legend(
    override.aes = list(
      fill  = colScale[1:3], 
      color = colScale[1:3]
    )
  )) +
  coord_cartesian(ylim = c(25, 100)) +
  theme_minimal()
  
if(MAN){
  if(rstudioapi::showQuestion(
    title   = "SAC",
    message = "Do you want to open SC-113B?"
  ) == TRUE) {
    browseURL(url = "https://wessanen.eu10.sapanalytics.cloud/link/SC113B")
  }
}
```

```{r}
#| label:  'APE vs ECO'
#| eval:   false

ggplot(
  data = ACC[STEP == 1], 
  aes(x = APA, y = EPA)
) +
  geom_point() +
  geom_abline(intercept = 0, slope = 1) +
  # geom_label(aes(label = round(PE, 1))) +
  # facet_wrap(~ PLANT + MATERIAL, scales = "free_y") +
  # scale_color_manual(values=c(pa_pa_ET_COLSS["CG"], pa_ET_FG))+
  theme_minimal()
```

<<<<<<< HEAD
=======
```{r}
library(ggplot2)
library(ggrepel)

ET_CG <- pa_ET_COLS["CG"]
ET_FG <- pa_ET_COLS["FG"]
ET_LG <- pa_ET_COLS["LG"]

ggplot(
  data = dtFA_melt[
    CALMONTH >= '202401' & 
      MATERIAL == MAT &  
      PE_TYPE == VAR
  ], 
  aes(
    x     = CALMONTH, 
    y     = PE, 
    group = STEP, 
    color = factor(STEP)
  )
) +
  geom_line(linewidth = 2) +
  geom_point() +
  # Instead of geom_label(), use geom_label_repel()
  geom_label_repel(aes(label = round(PE, 1)),
                   # optional parameters to tweak repel behavior
                   force         = 2,
                   max.overlaps  = Inf,
                   box.padding   = 0.3,
                   point.padding = 0.3
  ) +
  scale_color_manual(
    labels = c("M-1", "M-2", "M-3"),
    values = c(ET_CG, ET_FG, ET_LG)
  ) +
  labs(
    x     = "Year Month",
    y     = "Accuracy Academic",
    title = glue("SC-113B {pa_matn1_output(`MAT`)} - Forecast Accuracy ({`VAR`}) M-1, M-2, M-3"),
    color = "Forecast Period"
  ) +
  guides(color = guide_legend(
    override.aes = list(
      fill  = c(ET_CG, ET_FG, ET_LG), 
      color = c(ET_CG, ET_FG, ET_LG)
    )
  )) +
  coord_cartesian(ylim = c(25, 100)) +
  theme_minimal()

```
>>>>>>> bc06e7b638782b253f1281fcf317fe8e5dfd0790
