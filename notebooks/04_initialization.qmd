---
title   : EAISI - Pythia
subtitle: Initialization
author  : "F.J. Padt"
date    : "`r format(Sys.time(), '%B %d, %Y')`"
output  :
  pdf_document:
    df_print: paged
    toc: yes
    toc_depth: 1      
editor_options:
  chunk_output_type: console
  markdown: 
    wrap: 80  
---

\newpage

![](../images/logo.png)

# Purpose

Get all meta data needed from SAP to run locally

Note: can only be executed from **Ecotone Laptop**

# Setup

```{r}
#| label:  setup
#| eval:   true

knitr::opts_chunk$set(
  cache   = FALSE,
  echo    = TRUE,     # include R source code in the output  
  eval    = TRUE,
  message = FALSE,
  warning = FALSE,
  results = "markup",
  image   = TRUE,  
  include = TRUE      # include the chunk output in the output 
)

SID <- "WPB500"
SYS <- substr(SID, 1, 3)

# SAP Access
library(reticulate)
use_condaenv("sapyr")

# public functions ---------------------------------------------------------
invisible(source('library/KnitR_SetUp.R'))

lsrc <- "notebooks/05_data_ingestion.R"  
if( file.exists(lsrc)){source(lsrc)}

```

## OB - Open Hub

```{r}
#| label:  RSBOHDEST
#| eval:   true

# Directory of Open Hub Destinations #### 
B4_RSBOHDEST <- 
   fRead_and_Union(
     pSIDCLNT  = SID,
     pTable    = "RSBOHDEST",
     pOptions  = list(
       "OBJVERS = 'A'"
     ),
     pFields   = list(
        # "OHDEST"          , # Open Hub Destination                                        X
        # "OBJVERS"         , # Object version                                              X
        # "DESTTYPE"        , # Type of an Open Hub Destination                             
        # "DESTSUBTYPE"     , # Subtype of an Open Hub Destination                          
        # "LOGSYS"          , # Logical Target System for Open Hub                          
        # "COMSTRU"         , # Communication structure                                     
        # "OBJSTAT"         , # Object Status                                               
        # "CONTREL"         , # Content release                                             
        # "CONTTIMESTMP"    , # Content time stamp: Last modification to the object by SAP  
        # "OWNER"           , # Owner (Person Responsible)                                  
        # "BWAPPL"          , # BW Application (Namespace)                                  
        # "ACTIVFL"         , # Active and revised version do not agree                     
        # "TSTPNM"          , # Last Changed By                                             
        # "TIMESTMP"        , # UTC Time Stamp in Short Form (YYYYMMDDhhmmss)               
        # "SOURCETLOGO"     , # Object Type of Template                                     
        # "SOURCETLOGOSUB"  , # Subtype of Object                                           
        # "SOURCEOBJNM"     , # Name of Source                                              
        # "DATASOURCE"      , # DataSource, (3.x DataSource)                                
        # "SOURCELOGSYS"    , # Source system                                               
        # "INFOAREA"        , # InfoArea                                                    
        # "NEW_OHD"         , # Boolean                                                     
        # "TLOGO"           , # BW: Object Type (TLOGO)                                     
        # "OBJNM"           , # Object Name in Object Directory                             
        # "SUBTYPE"         , # BW Metadata Repository: Subtype of TLOGO Type               
        # "DISPLAY_ONLY"    , # Boolean                                                     
        # "GENERATED"       , # Boolean                                                     
        # "DTP_CREATE"      , # Boolean                                                     
        # "CREATED_AT"      , # Creation UTC Time Stamp in Short Form (YYYYMMDDhhmmss)      
        # "CREATED_BY"      , # Tlogo Object Created by                                     
        # "STATUS_SET_EXT"  , # Boolean                                                     
        # "SEND_NOTIFY"     , # Boolean                                                     
        # "DESTINATION"       # Logical system                                              
    ),
     pRowcount = Inf
   )

# Directory of Open Hub Destinations #### 
B4_RSBOHDESTT <- 
   fRead_and_Union(
     pSIDCLNT  = "WPB500",
     pTable    = "RSBOHDESTT",
     pOptions  = list(
       "LANGU   = 'EN'", "AND",
       "OBJVERS = 'A'"       
     ),
     pFields   = list(
        # "LANGU"     , # Language Key          X
        # "OHDEST"    , # Open Hub Destination  X
        # "OBJVERS"   , # Object version        X
        # "TXTSH"     , # Short description     
        # "TXTLG"       # Long description      
    ),
     pRowcount = Inf
   )

# Add Text ####
RSBOHDEST <- 
  B4_RSBOHDESTT %>%
  .[B4_RSBOHDEST, 
    on = .(SYSTID, CLIENT, OBJVERS, OHDEST)] %T>%
  setorder(OHDEST)

# write RSBOHDEST ####
fwrite(
  x = RSBOHDEST,
  file = file.path(PS01, SYS, "B4", "B4_RSBOHDEST.csv"),
)
```

### Fields

```{r}
#| label:  RSBOHFIELDS
#| eval:   true

# Fields of the Open Hub Destination #### 
B4_RSBOHFIELDS <- 
   fRead_and_Union(
     pSIDCLNT  = SID,
     pTable    = "RSBOHFIELDS",
     pOptions  = list(
       "OBJVERS = 'A'"
     ),
     pFields   = list(
        "OHDEST"      , # Open Hub Destination                            X
        "OBJVERS"     , # Object version                                  X
        "FIELDNM"     , # Field name                                      X
        "POSIT"       , # Position of the Field in the Structure / Table
        "TEMPIOBJNM"  , # InfoObject
        "KEYFLAG"     , # Open Hub: Indicator for Semantic Key
        "DATATYPE"    , # Data Type
        "INTLEN"      , # Internal Length in Bytes
        "LENG"        , # Length (No. of Characters)
        "OUTPUTLEN"   , # Output Length
        "INTTYPE"     , # ABAP data type (C,D,N,...)
        "CONVEXIT"    , # Conversion Routine
        "DECIMALS"    , # Number of Decimal Places
        "OUTFORMAT"   , # Data Input Format (Internal/External)
        "EXT_DTYPE"   , # Data Type
        "EXT_LENGHT"  , # Output Length
        "UNIFIELDNM"  , # Name of the relevant unit field
        "DTELNM"        # Data Element (Semantic Domain)
    ),
     pRowcount = Inf
   ) 

# Text Table for Fields of the Open Hub Destination #### 
B4_RSBOHFIELDST <- 
   fRead_and_Union(
     pSIDCLNT  = SID,
     pTable    = "RSBOHFIELDST",
     pOptions  = list(
       "LANGU   = 'EN'", "AND",
       "OBJVERS = 'A'"
     ),
     pFields   = list(
        "LANGU"     , # Language Key          X
        "OHDEST"    , # Open Hub Destination  X
        "OBJVERS"   , # Object version        X
        "FIELDNM"   , # Field name            X
        "TXTSH"     , # Short description
        "TXTLG"       # Long description
    ),
     pRowcount = Inf
   )

# Add text ####
RSBOHFIELDS <- 
  B4_RSBOHFIELDST %>%
  .[B4_RSBOHFIELDS, 
    on = .(SYSTID, CLIENT, OHDEST, OBJVERS, FIELDNM)] %T>%
  setorder(OHDEST, POSIT)

# Write RSBOHFIELDS ####
fwrite(
  x = RSBOHFIELDS,
  file = file.path(PS01, SYS, "B4", "B4_RSBOHFIELDS.csv"),
)

```

### Pythia

- RW_DSCP
- RW_PYTHIA
- DML_SOP
- RW_MD_SOP

```{r}
#| label:  PA_OPEN_HUB
#| eval:   true

# Pythia Info Area's
PA_IA <- c('RW_DSCP', 'RW_PYTHIA', 'DML_SOP', 'RW_MD_SOP')

# Create PA Open Hub ####
PA_OPEN_HUB <- 
  RSBOHDEST[, .(
    SYSTID, CLIENT, OHDEST, OHD = TXTLG, OBJVERS, INFOAREA, 
    SOURCEOBJNM, SOURCETLOGO, CREATED_BY, OWNER, DESTTYPE)][
      RSBOHFIELDS[],
      on = .(SYSTID, CLIENT, OHDEST, OBJVERS)] %>%
  .[INFOAREA %chin% PA_IA] %T>%
  setorder(OHDEST, POSIT)

# Write PA Open Hub ####
fwrite(
  x = PA_OPEN_HUB,
  file = file.path(PS01, SYS, "B4", "PA_OPEN_HUB.csv"),
)


```

## IB - Data Sources

```{r}
#| label:  SAP
#| eval:   true

# Inbound DataSources - Dynasys -> BW
# DataSource - Segment Fields #### 
B4_RSDSSEGFD <- 
   fRead_and_Union(
     pSIDCLNT  = SID,
     pTable    = "RSDSSEGFD",
     pOptions  = list(
       "OBJVERS = 'A'"
     ),
     pFields   = list(
        "DATASOURCE"   , # DataSource (OSOA/OSOD)                               X
        "LOGSYS"       , # Source system                                        X
        "OBJVERS"      , # Object version                                       X
        "SEGID"        , # Segment                                              X
        "POSIT"        , # Position of the Field in the Structure / Table       X
        "FIELDNM"      , # Field name
        "DTELNM"       , # Data Element
        "DATATYPE"     , # Data type
        "LENG"         , # Length (No. of Characters)
        "CONVEXIT"     , # Conversion Routines in BW
        "DECIMALS"     , # Number of Decimal Places
        "UNIFIELDNM"   , # Name of Referenced Currency Field / Unit Field
        "CONSTANT"     , # Fixed Value of DataSource Field
        "DOMANM"       , # Domain
        "KEYFIELD"     , # Key Field
        "SELECTION"    , # Selection
        "SELOPTS"      , # Selection Options
        "SELDIRECT"    , # Selection Field for Direct Access
        "LOWERCASE"    , # Lowercase letters allowed/not allowed
        "OUTPUTLEN"    , # Output Length
        "IOBJNM"       , # Template InfoObject for DataSource Field
        "CONVEXITSRC"  , # Conversion Routine in Source System (Outside of BW)
        "CONVTYPE"     , # Data Input Format (Internal/External)
        "TRANSFER"     , # Field Will Be Transferred (In PSA and Structures)
        "CONTOBJECT"   , # Object Name in Object Directory
        "ORIGIN"         # Switch Assignment of a DataSource Field
    ),
     pRowcount = Inf
   )

# Platform-Independent File Names, Cross-Client #### 
B4_FILENAMECI <- 
   fRead_and_Union(
     pSIDCLNT  = SID,
     pTable    = "FILENAMECI",
     pOptions  = list(),
     pFields   = list(
        # "FILEINTERN"  , # Logical file name                       X
        # "FILEEXTERN"  , # Physical file name                      
        # "FILEFORMAT"  , # Transfer file format (upload/download)  
        # "APPLI_TR01"  , # Application area                        
        # "PATHINTERN"    # Logical path name                       
    ),
     pRowcount = Inf
   )

```

```{r}
#| label:  Write_metadata 
#| label:  true 

fwrite(
  x = B4_RSBOHFIELDST,
  file = file.path(PS01, SYS, "B4", "B4_RSDSSEGFD.csv"),
)

fwrite(
  x = B4_FILENAMECI,
  file = file.path(PS01, SYS, "B4", "B4_FILENAMECI.csv"),
)

```

```{r}
#| label:  Write_pipeline
#| label:  false 


# B4_RSBOHFIELDS[, .(
#   PYTHIA = ''                , 
#   OHDEST                     , 
#   POSIT = paste0(POSIT, '00'),
#   DATATYPE                   ,    
#   FLDNM_IN  = FIELDNM        ,
#   FIELDTP   = 'VARCHAR'      ,
#   TRNSFRM   = FIELDNM        ,
#   FLDNM_OUT = FIELDNM
# )] %T>%
#   setorder(OHDEST, POSIT) %T>%
#   fwrite(
#     file = file.path(PS01, SYS, "B4", "B4_PIPELINE.csv")
#     )

```
